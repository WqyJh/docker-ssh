name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: "42 3 * * 0"
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  DOCKER_HUB_USER: wqyjh
  IMAGE_NAME: wqyjh/docker-ssh

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    strategy:
      matrix:
        include:
          - release: alpine
            tag: latest
          - release: ubuntu
            tag: latest
          - release: ubuntu
            tag: 24.04
          - release: ubuntu
            tag: 22.04
          - release: debian
            tag: latest
          - release: debian
            tag: 12
          - release: debian
            tag: 11
          - release: rockylinux
            tag: 9
          - release: rockylinux
            tag: 8
          - release: almalinux
            tag: 9
          - release: almalinux
            tag: 8

        release: [cuda]
        tag:
          - 12.6.2-devel-ubuntu24.04
          - 12.6.2-devel-ubuntu22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.7.0
        with:
          cosign-release: 'v2.4.1'
      - name: Check install!
        run: cosign version

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set IMAGE_TAG
        if: matrix.tag != 'latest'
        id: set_image_tag
        run: |
          echo "IMAGE_TAG=${{ matrix.release }}${{ matrix.tag }}" >> $GITHUB_ENV

      - name: Set IMAGE_TAG latest
        if: matrix.tag == 'latest'
        id: set_image_tag_latest
        run: |
          echo "IMAGE_TAG=${{ matrix.release }}" >> $GITHUB_ENV

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.release }}/${{ matrix.tag }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Write signing key to disk
        run: 'echo "$KEY" > cosign.key'
        shell: bash
        env:
          KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign --key cosign.key ${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ env.IMAGE_NAME }}
          short-description: ${{ github.event.repository.description }}
